name: Library CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: |
        sudo apt-get update 
        sudo apt-get install make gcc-arm-none-eabi
    - name: build
      run: make build && make cortexm0
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: libshinyallocator.so
        path: ./libshinyallocator.so

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: libshinyallocatorV1.0.so-${{ github.run_number }}
        release_name: libshinyallocatorV1.0-${{ github.run_number }}
        draft: false
        prerelease: false
        body_path : release_note.md

    - name: Upload .so module
      id: upload-so-module 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./libshinyallocator.so
        asset_name: libshinyallocator.so
        asset_content_type: binary/so

    - name: Upload .elf Cortex-M0 Kernel 
      id: upload-elf-kernel 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./kernel.elf
        asset_name: kernel.elf
        asset_content_type: binary/elf
